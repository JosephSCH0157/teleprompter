name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci

      # Start simple static server (yours auto-noops if already running)
      - name: Start static server
        run: node tools/static_server.js &
      
      # Non-strict on PRs
      - name: Smoke (PR - non-strict)
        if: ${{ github.event_name == 'pull_request' }}
        run: node tools/smoke_test.js --calm --timeout=120000

      # Strict on pushes to main
      - name: Smoke (push - strict dupBoot)
        if: ${{ github.event_name == 'push' }}
        env:
          SMOKE_STRICT_DUPBOOT: "1"
        run: node tools/smoke_test.js --calm --timeout=120000

      - name: Save smoke report
        if: always()
        run: |
          # Grab the first SMOKE-REPORT line from the step summary or logs
          grep -a "SMOKE-REPORT" -m 1 $GITHUB_STEP_SUMMARY || true
name: CI - checks

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  check:
    name: Lint, Types, Smoke, UI Crawl
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Lint (JS)
        run: npm run lint || true

      - name: TypeScript (build logic + typecheck)
        run: |
          npm run build:logic
          npm run typecheck

      - name: Run smoke (headless)
        id: smoke
        run: |
          set -eo pipefail
          npm run smoke | tee smoke.log

      - name: Extract smoke report
        if: always()
        run: |
          LINE=$(grep -F "[SMOKE-REPORT]" smoke.log || true)
          echo "REPORT_LINE<<EOF" >> $GITHUB_OUTPUT
          echo "$LINE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run UI crawl
        run: node tools/ui_crawl.js

      - name: Validate UI crawl
        run: node tools/validate_ui_crawl.js

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: runtime-artifacts
          path: |
            smoke.log
            tools/ui_crawl_report.json

      - name: Bundle size check (optional)
        run: |
          node -e "const fs=require('fs');const p='dist/app.js';if(!fs.existsSync(p)){console.log('No dist/app.js; skipping size check');process.exit(0)};const kb=Math.round(fs.statSync(p).size/1024);if(kb>500){console.error('Bundle too big:',kb,'KB');process.exit(1)}else{console.log('Bundle OK:',kb,'KB')}"
                with:
                  name: runtime-artifacts
                  path: |
                    smoke.log
                    tools/ui_crawl_report.json

              - name: Optional: bundle size check
                run: |
                  node -e "const fs=require('fs');const p='dist/app.js';if(!fs.existsSync(p)){console.log('No dist/app.js; skipping size check');process.exit(0)};const kb=Math.round(fs.statSync(p).size/1024);if(kb>500){console.error('Bundle too big:',kb,'KB');process.exit(1)}else{console.log('Bundle OK:',kb,'KB')}"

